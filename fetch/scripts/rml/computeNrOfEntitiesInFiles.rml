/*
* This file is part of Fetch (the Fact Extraction Tool CHain).
*
* Fetch is free software; you can redistribute it and/or modify it under the
* terms of the GNU General Public License as published by the Free Software
* Foundation; either version 2 of the License, or (at your option) any later
* version.
*
* Fetch is distributed in the hope that it will be useful, but WITHOUT ANY
* WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
* FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
* details.
*
* You should have received a copy of the GNU General Public License along
* with Fetch; if not, write to the Free Software Foundation, Inc.,
* 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
*
* Copyright 2007 University of Antwerp
* Author(s):  Bart Du Bois <bart.dubois@ua.ac.be>
*/

/**
 * Counts the number of functions and methods
 * belonging to files and classes.
 **/

// print header
PRINT "fileId	fileName	nrOfEntities	nrOfClasses",ENDL;

InvokeableEntity(anEntity) := Method(anEntity,_) | Function(anEntity,_);

SourceFileContainingEntity(anEntity,aFileId) := InvokeableEntity(anEntity) &
	File(aFileId,_) &
		(FunctionBelongsToFile(anEntity, aFileId) |
		 EX(classId, MethodBelongsToClass(anEntity, classId) & ClassBelongsToFile(classId, aFileId)));

IsASourceFile(aFileId) := SourceFileContainingEntity(_,aFileId);

FOR theFileId IN IsASourceFile(x) {
	nrOfEntities := #(SourceFileContainingEntity(x,theFileId));
	nrOfClasses := #(ClassBelongsToFile(x,theFileId));

	SourceFileName(aFileName) := File(theFileId,aFileName);

	FOR theFileName IN SourceFileName(x) {
		PRINT theFileId,"	'",theFileName,"'	",nrOfEntities,"	",nrOfClasses,ENDL;
	}
}
