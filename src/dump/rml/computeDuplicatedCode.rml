/**
 * This file is part of TSmells
 *
 * TSmells is free software; you can redistribute it and/or modify it 
 * under the terms of the GNU General Public License as published by the 
 * Free Software Foundation; either version 2 of the License, or (at your 
 * option) any later version.
 *
 * TSmells is distributed in the hope that it will be useful, but WITHOUT 
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS 
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more 
 * details.
 *
 * You should have received a copy of the GNU General Public License along 
 * with TSmells; if not, write to the Free Software Foundation, Inc., 
 * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA 
 *
 * Copyright 2007 Manuel Breugelmans <manuel.breugelmans@student.ua.ac.be>
 */

EXEC "START_TIMER2";

/**
 * Duplication in tests is nefast, introduce helpers or 
 * move to fixture.
 **/

TestMethodNoGarb(id_) :=
        TestCommandId(id_) |
        TestHelperId(id_) |
        TestSetupId(id_) |
        TestTeardownId(id_);
EXEC "ECHO2 TestMethodNoGarb computed TIMER2";

/**
 * The invocations of a testmethod with
 * filename and linenumber.
 *
 * @col tcid:   invoker test method id
 * @col iid:    invocation id
 * @col invid:  invokee id
 * @col line:   invocation line number
 * @col tc:     qualified testmethod name
 * @col inv:    qualified invokee name
 * @col file:   filename
 **/
ComInvoke(iid, tcid_, invid, line_, inv, tcx, file_) :=
    PureInvokes(iid, tcid_, invid) & 
    TestMethodNoGarb(tcid_) &
    LineNo(iid, _, line_) &
    (Method(invid, inv) | Function(invid, inv)) &
    TestEntityInfo(tcid_, tcx, file_, _) &
    !TestChecker(invid);


EXEC "ECHO2 ComInvoke computed TIMER2";
EXEC "rm -rf tmp_duplic_code__";
PRINT ["ComInvoke"] ComInvoke(a_dc,b_dc,c_dc,d_dc,e_dc,f_dc,g_dc) TO "tmp_duplic_code__";
EXEC "ECHO2 ComInvoke printed TIMER2";

/**
 * The accesses of a testmethod, with
 * filename and linenumber.
 *
 * @col tcid:  accessor test method id
 * @col aid:   access id
 * @col attid: attribute type id (was attribute id)
 * @col line:  access line number
 * @col tc:    qualified testmethod name
 * @col att:   qualified attribute name
 * @col file:  filename
 **/

ComAccess(aid, tcid_ca, attid, line2, att, tc2, file2) := 
   EX(attrid,
        PureAccesses(aid, tcid_ca, attrid) &
        TestMethodNoGarb(tcid_ca) &
        LineNo(aid, _, line2) &
        Attribute(attrid, att) &
        HasType(attrid, attid) &
        TestEntityInfo(tcid_ca, tc2, file2, _)
   );

EXEC "ECHO2 ComAccess computed TIMER2";
PRINT ["ComAccess"] ComAccess(a_dc,b_dc,c_dc,d_dc,e_dc,f_dc,g_dc) TO "tmp_duplic_code__";
EXEC "ECHO2 ComAccess printed TIMER2";

// now execute a python script which computes the clones
EXEC "python DUPLICATED_CODE_PYGEN tmp_duplic_code__ DUPLICATED_CODE_TRESHOLD &";
//EXEC "rm -rf tmp_duplic_code__";
EXEC "ECHO2 DuplicatedCode.py executed TIMER2";
