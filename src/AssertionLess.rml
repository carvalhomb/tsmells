/**
 * This file is part of TSmells
 *
 * TSmells is free software; you can redistribute it and/or modify it 
 * under the terms of the GNU General Public License as published by the 
 * Free Software Foundation; either version 2 of the License, or (at your 
 * option) any later version.
 *
 * TSmells is distributed in the hope that it will be useful, but WITHOUT 
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS 
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more 
 * details.
 *
 * You should have received a copy of the GNU General Public License along 
 * with TSmells; if not, write to the Free Software Foundation, Inc., 
 * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA 
 *
 * Copyright 2007 Manuel Breugelmans <manuel.breugelmans@student.ua.ac.be>
 */

/**
 * Append xUnit framework checker methods!
 * No checker method defined = all tests marked as smelly ...
 *
 * TestEntities: + writeCppTestEntities.rml
 *               + writeJavaTestEntities.rml
 * 
 * eg: appendJavaTE.sh rsf/SingleTCNoAssert.rsf  | \
 *            crocopat ${TSMELLS}/src/AssertionLess.rml
 *
 **/

// fake it
//PRINT "MyTest.testCommand()", ENDL;

TestInvokes(x,y) := PureInvokes(_,x,y) & (TestCommandId(x) | TestHelperId(x));
TCTestInvokes(x,y) := TC(TestInvokes(x,y)); 

FOR tc IN TestCommandId(x) {
    // direct checker invokes in testcommand?
    num := #(CheckerInvoke(x,tc,y));
    IF ( num = 0 ) {
        // indirect checker invokes through testhelpers?
        AssertInHelper(x) := EX(y, CheckerInvoke(x,y,_) & TCTestInvokes(tc,y) & TestHelperId(y));
        num2 := #(AssertInHelper(x));
        IF ( num2 = 0 ) { // woops, no assertions!
            CmdName(x) := Method(tc,x);
            FileName(x) := EX(y, InvokableEntityBelongsToFile(tc,y,_) & File(y,x));
            LineNr(x) := InvokableEntityBelongsToFile(tc, _, x);
            FOR f IN FileName(x) {
            FOR l IN LineNr(x)   {
            FOR i IN CmdName(x)  {
                PRINT "AssertionLess;", i, ";", f, ";", l,  ENDL;
            }}}
        }
    }
}
