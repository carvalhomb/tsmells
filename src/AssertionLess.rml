/**
 * This file is part of TSmells
 *
 * TSmells is free software; you can redistribute it and/or modify it 
 * under the terms of the GNU General Public License as published by the 
 * Free Software Foundation; either version 2 of the License, or (at your 
 * option) any later version.
 *
 * TSmells is distributed in the hope that it will be useful, but WITHOUT 
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS 
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more 
 * details.
 *
 * You should have received a copy of the GNU General Public License along 
 * with TSmells; if not, write to the Free Software Foundation, Inc., 
 * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA 
 *
 * Copyright 2007 Manuel Breugelmans <manuel.breugelmans@student.ua.ac.be>
 */

/**
 * A test command is said to be AssertionLess if it doesnt invoke
 * any checker methods (assertions).
 *
 * For a formal description see formspec.pdf
 **/

// TODO dont recompute the closure here but use 'TransComHelper' relation

/**
 * All invocations of entity y in test command/helper x
 **/
TestInvokes(x,y) := PureInvokes(_,x,y) & (TestCommandId(x) | TestHelperId(x));

/**
 * All invocations, direct and indirect
 **/
TCTestInvokes(x,y) := TC(TestInvokes(x,y));

/**
 * All checker invocations in a nested testhelper for tcid
 **/
CheckerInvokeHelper(invid, tcid) := 
    EX(y, CheckerInvoke(invid, y, _) & TCTestInvokes(tcid,y) & TestHelperId(y));

AssertionLessId("0"); // without this line crocopat spews an assertion
// crocopat: relYacc.y:232: int yyparse(): Assertion `gVariables.find(*yyvsp[-6].rel_String) == gVariables.end()' failed.


FOR tc IN TestCommandId(x) {
    IF ((#(CheckerInvoke(x_al,tc,y_al)) = 0) & 
        (#(CheckerInvokeHelper(x_al,tc)) = 0)) {
        // this command has no direct or indirect assertion invocations
        AssertionLessId(x_al3) := AssertionLessId(x_al3) | x_al3 = tc;
    }
}

/**
 * Get the command name, the sourcefile its declared in plus linenumber
 **/
AssertionLess(tcnm, file, line) :=
    EX(tcid,
            AssertionLessId(tcid) &
            TestEntityInfo(tcid, tcnm, file, line) );

PRINT ["AssertionLess"] AssertionLess(x,y,z);
