/**
 * This file is part of TSmells
 *
 * TSmells is free software; you can redistribute it and/or modify it 
 * under the terms of the GNU General Public License as published by the 
 * Free Software Foundation; either version 2 of the License, or (at your 
 * option) any later version.
 *
 * TSmells is distributed in the hope that it will be useful, but WITHOUT 
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS 
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more 
 * details.
 *
 * You should have received a copy of the GNU General Public License along 
 * with TSmells; if not, write to the Free Software Foundation, Inc., 
 * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA 
 *
 * Copyright 2007 Manuel Breugelmans <manuel.breugelmans@student.ua.ac.be>
 */

/**
 * Unittests shouldnt be riddled with control structures
 *
 **/

// fake it implementation
//PRINT "IndentedTest;TC;MyTest.testCommand();1", ENDL;

//Measurement    212    8    "COND"    1
//Measurement    213    10    "LOOP"    1

FOR tcid IN TestCommandId(x) {
    LoopCount(numx) := Measurement(_, tcid, "LOOP", numx);
    CondCount(numx) := Measurement(_, tcid, "COND", numx);
    ncs := SUM(LoopCount(x)) + SUM(CondCount(y)); // summing over a single element ..
    IF ( ncs > 0) {
        TCName(tcnm) := Method(tcid,tcnm); // single element
        FileName(x) := EX(y, def, DefinitionForDeclaration(def, tcid) & InvokableEntityBelongsToFile(def,y,_) & File(y,x));
        LineNr(x) := InvokableEntityBelongsToFile(tcid, _, x);
        FOR f IN FileName(x)  {
        FOR l IN LineNr(x)    {
        FOR tcnm IN TCName(x) {
            PRINT "IndentedTest;TC;", tcnm, ";", ncs, ";", f, ";", l, ENDL;
        }}}
    }
}

FOR thid IN TestHelperId(x) {
    LoopCount(numx) := Measurement(_, thid, "LOOP", numx);
    CondCount(numx) := Measurement(_, thid, "COND", numx);
    ncs := SUM(LoopCount(x)) + SUM(CondCount(y)); // summing over a single element ..
    IF ( ncs > 0) {
        THName(thnm) := Method(thid,thnm); // single element
        FileName(x) := EX(y, def, DefinitionForDeclaration(def, thid) & InvokableEntityBelongsToFile(def,y,_) & File(y,x));
        LineNr(x) := InvokableEntityBelongsToFile(thid, _, x);
        FOR f IN FileName(x)  {
        FOR l IN LineNr(x)    {
        FOR thnm IN THName(x) {
            PRINT "IndentedTest;TH;", thnm, ";", ncs, ";", f, ";", l, ENDL;
        }}}
    }
}

